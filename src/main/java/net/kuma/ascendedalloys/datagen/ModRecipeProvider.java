package net.kuma.ascendedalloys.datagen;

import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricRecipeProvider;
import net.kuma.ascendedalloys.block.ModBlocks;
import net.kuma.ascendedalloys.item.ModItems;
import net.minecraft.data.server.recipe.RecipeJsonProvider;
import net.minecraft.data.server.recipe.ShapedRecipeJsonBuilder;
import net.minecraft.data.server.recipe.SmithingTransformRecipeJsonBuilder;
import net.minecraft.item.ItemConvertible;
import net.minecraft.item.Items;
import net.minecraft.recipe.Ingredient;
import net.minecraft.recipe.book.RecipeCategory;
import net.minecraft.registry.tag.ItemTags;
import net.minecraft.util.Identifier;

import java.util.List;
import java.util.function.Consumer;

public class ModRecipeProvider extends FabricRecipeProvider {
    private static final List<ItemConvertible> FORGOTTEN_DEBRIS_SMELTABLES = List.of(ModBlocks.FORGOTTEN_DEBRIS);

    public ModRecipeProvider(FabricDataOutput output) {
        super(output);
    }

    @Override
    public void generate(Consumer<RecipeJsonProvider> exporter) {

        //Crafting Copper Armor
        ShapedRecipeJsonBuilder.create(RecipeCategory.COMBAT, ModItems.COPPER_HELMET, 1).pattern("CCC").pattern("C C").pattern("   ").input('C', Items.COPPER_INGOT).criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.CRAFTING_TABLE)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_helmet"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.COMBAT, ModItems.COPPER_CHESTPLATE, 1).pattern("C C").pattern("CCC").pattern("CCC").input('C', Items.COPPER_INGOT).criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.CRAFTING_TABLE)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_chestplate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.COMBAT, ModItems.COPPER_LEGGINGS, 1).pattern("CCC").pattern("C C").pattern("C C").input('C', Items.COPPER_INGOT).criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.CRAFTING_TABLE)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_leggings"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.COMBAT, ModItems.COPPER_BOOTS, 1).pattern("C C").pattern("C C").pattern("   ").input('C', Items.COPPER_INGOT).criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.CRAFTING_TABLE)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_boots"));

        //Smithing Table
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.SMITHING_TABLE, 1).pattern("@@ ").pattern("## ").pattern("## ").input('@', Items.STONE).input('#', ItemTags.PLANKS).criterion(hasItem(Items.STONE), conditionsFromTag(ItemTags.LOGS)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_smithing_table"));

        //Smelting Item
        offerSmelting(exporter, FORGOTTEN_DEBRIS_SMELTABLES, RecipeCategory.MISC, ModItems.ENDERITE_SCRAP, 1f, 200, "enderite");
        offerBlasting(exporter, FORGOTTEN_DEBRIS_SMELTABLES, RecipeCategory.MISC, ModItems.ENDERITE_SCRAP, 1f, 100, "enderite");

        //Crafting Enderite Blocks
        offerReversibleCompactingRecipes(exporter, RecipeCategory.MISC, ModItems.ENDERITE_INGOT, RecipeCategory.BUILDING_BLOCKS, ModBlocks.ENDERITE_BLOCK, "ascendedalloys:enderite_block", "enderite", "ascendedalloys:enderite_ingot_from_block", "enderite");

        //Crafting Enderite
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.ENDERITE_INGOT, 1).pattern("***").pattern("*oo").pattern("oo ").input('*', ModItems.ENDERITE_SCRAP).input('o', Items.ENDER_PEARL).criterion(hasItem(ModItems.ENDERITE_SCRAP), conditionsFromItem(Items.ENDER_EYE)).criterion(hasItem(Items.ENDER_EYE), conditionsFromItem(ModItems.ENDERITE_SCRAP)).offerTo(exporter, new Identifier(getRecipeName(ModItems.ENDERITE_INGOT)));

        //Create Smithing Template
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.STONE_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.COBBLESTONE).input('S', ItemTags.LOGS).input('O', ItemTags.PLANKS).criterion(hasItem(Items.COBBLESTONE), conditionsFromTag(ItemTags.LOGS)).offerTo(exporter, new Identifier(getRecipeName(ModItems.STONE_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.COPPER_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.COPPER_INGOT).input('S', ModItems.STONE_UPGRADE).input('O', Items.COBBLESTONE).criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(ModItems.STONE_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(ModItems.COPPER_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.IRON_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.IRON_INGOT).input('S', ModItems.COPPER_UPGRADE).input('O', Items.COPPER_INGOT).criterion(hasItem(Items.IRON_INGOT), conditionsFromItem(ModItems.COPPER_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(ModItems.IRON_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.GOLD_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.GOLD_INGOT).input('S', ModItems.IRON_UPGRADE).input('O', Items.IRON_INGOT).criterion(hasItem(Items.GOLD_INGOT), conditionsFromItem(ModItems.IRON_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(ModItems.GOLD_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.DIAMOND_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.DIAMOND).input('S', ModItems.IRON_UPGRADE).input('O', Items.IRON_INGOT).criterion(hasItem(Items.DIAMOND), conditionsFromItem(ModItems.IRON_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(ModItems.DIAMOND_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.AMETHYST_UPGRADE, 1).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.AMETHYST_SHARD).input('S', ModItems.DIAMOND_UPGRADE).input('O', Items.DIAMOND).criterion(hasItem(Items.AMETHYST_SHARD), conditionsFromItem(ModItems.DIAMOND_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(ModItems.AMETHYST_UPGRADE)));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE, 1).pattern("#S#").pattern("#O#").pattern("GGG").input('#', Items.NETHERITE_SCRAP).input('S', ModItems.AMETHYST_UPGRADE).input('O', Items.AMETHYST_SHARD).input('G', Items.GOLD_INGOT).criterion(hasItem(Items.NETHERITE_SCRAP), conditionsFromItem(ModItems.AMETHYST_UPGRADE)).offerTo(exporter, new Identifier(getRecipeName(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE)));

        //Duplicate Smithing Template
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.STONE_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.COBBLESTONE).input('S', ModItems.STONE_UPGRADE).input('O', Items.STONE).criterion(hasItem(ModItems.STONE_UPGRADE), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.COPPER_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.COPPER_INGOT).input('S', ModItems.COPPER_UPGRADE).input('O', Items.COPPER_BLOCK).criterion(hasItem(ModItems.COPPER_UPGRADE), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.IRON_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.IRON_INGOT).input('S', ModItems.IRON_UPGRADE).input('O', Items.IRON_BLOCK).criterion(hasItem(ModItems.IRON_UPGRADE), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.GOLD_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.GOLD_INGOT).input('S', ModItems.GOLD_UPGRADE).input('O', Items.GOLD_BLOCK).criterion(hasItem(ModItems.GOLD_UPGRADE), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.DIAMOND_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.DIAMOND).input('S', ModItems.DIAMOND_UPGRADE).input('O', Items.DIAMOND_BLOCK).criterion(hasItem(ModItems.DIAMOND_UPGRADE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.AMETHYST_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.AMETHYST_SHARD).input('S', ModItems.AMETHYST_UPGRADE).input('O', Items.AMETHYST_BLOCK).criterion(hasItem(ModItems.AMETHYST_UPGRADE), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', Items.NETHERITE_SCRAP).input('S', Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE).input('O', Items.NETHERITE_INGOT).criterion(hasItem(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_upgrade_smithing_template_duplicate"));
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.ENDERITE_UPGRADE, 2).pattern("#S#").pattern("#O#").pattern("###").input('#', ModItems.ENDERITE_SCRAP).input('S', ModItems.ENDERITE_UPGRADE).input('O', ModItems.ENDERITE_INGOT).criterion(hasItem(ModItems.ENDERITE_UPGRADE), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "enderite_upgrade_smithing_template_duplicate"));

        //Upgrade Wooden Tools to Stone Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.STONE_UPGRADE), Ingredient.ofItems(Items.WOODEN_AXE), Ingredient.ofItems(Items.COBBLESTONE), RecipeCategory.TOOLS, Items.STONE_AXE).criterion(hasItem(Items.WOODEN_AXE), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "wooden_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.STONE_UPGRADE), Ingredient.ofItems(Items.WOODEN_HOE), Ingredient.ofItems(Items.COBBLESTONE), RecipeCategory.TOOLS, Items.STONE_HOE).criterion(hasItem(Items.WOODEN_HOE), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "wooden_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.STONE_UPGRADE), Ingredient.ofItems(Items.WOODEN_PICKAXE), Ingredient.ofItems(Items.COBBLESTONE), RecipeCategory.TOOLS, Items.STONE_PICKAXE).criterion(hasItem(Items.WOODEN_PICKAXE), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "wooden_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.STONE_UPGRADE), Ingredient.ofItems(Items.WOODEN_SHOVEL), Ingredient.ofItems(Items.COBBLESTONE), RecipeCategory.TOOLS, Items.STONE_SHOVEL).criterion(hasItem(Items.WOODEN_SHOVEL), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "wooden_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.STONE_UPGRADE), Ingredient.ofItems(Items.WOODEN_SWORD), Ingredient.ofItems(Items.COBBLESTONE), RecipeCategory.COMBAT, Items.STONE_SWORD).criterion(hasItem(Items.WOODEN_SWORD), conditionsFromItem(Items.COBBLESTONE)).offerTo(exporter, Identifier.of("ascendedalloys", "wooden_sword_upgrade"));

        //Upgrade Stone Tools to Copper Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.COPPER_UPGRADE), Ingredient.ofItems(Items.STONE_AXE), Ingredient.ofItems(Items.COPPER_INGOT), RecipeCategory.TOOLS, ModItems.COPPER_AXE).criterion(hasItem(Items.STONE_AXE), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.COPPER_UPGRADE), Ingredient.ofItems(Items.STONE_HOE), Ingredient.ofItems(Items.COPPER_INGOT), RecipeCategory.TOOLS, ModItems.COPPER_HOE).criterion(hasItem(Items.STONE_HOE), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.COPPER_UPGRADE), Ingredient.ofItems(Items.STONE_PICKAXE), Ingredient.ofItems(Items.COPPER_INGOT), RecipeCategory.TOOLS, ModItems.COPPER_PICKAXE).criterion(hasItem(Items.STONE_PICKAXE), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.COPPER_UPGRADE), Ingredient.ofItems(Items.STONE_SHOVEL), Ingredient.ofItems(Items.COPPER_INGOT), RecipeCategory.TOOLS, ModItems.COPPER_SHOVEL).criterion(hasItem(Items.STONE_SHOVEL), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.COPPER_UPGRADE), Ingredient.ofItems(Items.STONE_SWORD), Ingredient.ofItems(Items.COPPER_INGOT), RecipeCategory.COMBAT, ModItems.COPPER_SWORD).criterion(hasItem(Items.STONE_SWORD), conditionsFromItem(Items.COPPER_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "stone_sword_upgrade"));

        //Upgrade Copper Tools to Iron Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_AXE), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.TOOLS, Items.IRON_AXE).criterion(hasItem(ModItems.COPPER_AXE), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_HOE), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.TOOLS, Items.IRON_HOE).criterion(hasItem(ModItems.COPPER_HOE), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_PICKAXE), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.TOOLS, Items.IRON_PICKAXE).criterion(hasItem(ModItems.COPPER_PICKAXE), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_SHOVEL), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.TOOLS, Items.IRON_SHOVEL).criterion(hasItem(ModItems.COPPER_SHOVEL), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_SWORD), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.COMBAT, Items.IRON_SWORD).criterion(hasItem(ModItems.COPPER_SWORD), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_HELMET), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.COMBAT, Items.IRON_HELMET).criterion(hasItem(ModItems.COPPER_HELMET), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_CHESTPLATE), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.COMBAT, Items.IRON_CHESTPLATE).criterion(hasItem(ModItems.COPPER_CHESTPLATE), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_LEGGINGS), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.COMBAT, Items.IRON_LEGGINGS).criterion(hasItem(ModItems.COPPER_LEGGINGS), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.IRON_UPGRADE), Ingredient.ofItems(ModItems.COPPER_BOOTS), Ingredient.ofItems(Items.IRON_INGOT), RecipeCategory.COMBAT, Items.IRON_BOOTS).criterion(hasItem(ModItems.COPPER_BOOTS), conditionsFromItem(Items.IRON_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "copper_boots_upgrade"));

        //Upgrade Iron Tools to Gold Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_AXE), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.TOOLS, Items.GOLDEN_AXE).criterion(hasItem(Items.IRON_AXE), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_HOE), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.TOOLS, Items.GOLDEN_HOE).criterion(hasItem(Items.IRON_HOE), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_PICKAXE), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.TOOLS, Items.GOLDEN_PICKAXE).criterion(hasItem(Items.IRON_PICKAXE), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_SHOVEL), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.TOOLS, Items.GOLDEN_SHOVEL).criterion(hasItem(Items.IRON_SHOVEL), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_SWORD), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.COMBAT, Items.GOLDEN_SWORD).criterion(hasItem(Items.IRON_SWORD), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_HELMET), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.COMBAT, Items.GOLDEN_HELMET).criterion(hasItem(Items.IRON_HELMET), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_CHESTPLATE), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.COMBAT, Items.GOLDEN_CHESTPLATE).criterion(hasItem(Items.IRON_CHESTPLATE), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_LEGGINGS), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.COMBAT, Items.GOLDEN_LEGGINGS).criterion(hasItem(Items.IRON_LEGGINGS), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.GOLD_UPGRADE), Ingredient.ofItems(Items.IRON_BOOTS), Ingredient.ofItems(Items.GOLD_INGOT), RecipeCategory.COMBAT, Items.GOLDEN_BOOTS).criterion(hasItem(Items.IRON_BOOTS), conditionsFromItem(Items.GOLD_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_boots_upgrade"));

        //Upgrade Iron Tools to Diamond Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_AXE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_AXE).criterion(hasItem(Items.IRON_AXE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_HOE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_HOE).criterion(hasItem(Items.IRON_HOE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_PICKAXE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_PICKAXE).criterion(hasItem(Items.IRON_PICKAXE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_SHOVEL), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_SHOVEL).criterion(hasItem(Items.IRON_SHOVEL), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_SWORD), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_SWORD).criterion(hasItem(Items.IRON_SWORD), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_HELMET), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_HELMET).criterion(hasItem(Items.IRON_HELMET), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_CHESTPLATE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_CHESTPLATE).criterion(hasItem(Items.IRON_CHESTPLATE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_LEGGINGS), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_LEGGINGS).criterion(hasItem(Items.IRON_LEGGINGS), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.IRON_BOOTS), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_BOOTS).criterion(hasItem(Items.IRON_BOOTS), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "iron_d_boots_upgrade"));

        //Upgrade Diamond Tools to Amethyst Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_AXE), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.TOOLS, ModItems.AMETHYST_AXE).criterion(hasItem(Items.DIAMOND_AXE), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_HOE), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.TOOLS, ModItems.AMETHYST_HOE).criterion(hasItem(Items.DIAMOND_HOE), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_PICKAXE), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.TOOLS, ModItems.AMETHYST_PICKAXE).criterion(hasItem(Items.DIAMOND_PICKAXE), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_SHOVEL), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.TOOLS, ModItems.AMETHYST_SHOVEL).criterion(hasItem(Items.DIAMOND_SHOVEL), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_SWORD), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.COMBAT, ModItems.AMETHYST_SWORD).criterion(hasItem(Items.DIAMOND_SWORD), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_HELMET), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.COMBAT, ModItems.AMETHYST_HELMET).criterion(hasItem(Items.DIAMOND_HELMET), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_CHESTPLATE), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.COMBAT, ModItems.AMETHYST_CHESTPLATE).criterion(hasItem(Items.DIAMOND_CHESTPLATE), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_LEGGINGS), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.COMBAT, ModItems.AMETHYST_LEGGINGS).criterion(hasItem(Items.DIAMOND_LEGGINGS), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.AMETHYST_UPGRADE), Ingredient.ofItems(Items.DIAMOND_BOOTS), Ingredient.ofItems(Items.AMETHYST_SHARD), RecipeCategory.COMBAT, ModItems.AMETHYST_BOOTS).criterion(hasItem(Items.DIAMOND_BOOTS), conditionsFromItem(Items.AMETHYST_SHARD)).offerTo(exporter, Identifier.of("ascendedalloys", "diamond_boots_upgrade"));

        //Upgrade Amethyst Tools to Netherite Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_AXE), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.TOOLS, Items.NETHERITE_AXE).criterion(hasItem(ModItems.AMETHYST_AXE), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_HOE), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.TOOLS, Items.NETHERITE_HOE).criterion(hasItem(ModItems.AMETHYST_HOE), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_PICKAXE), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.TOOLS, Items.NETHERITE_PICKAXE).criterion(hasItem(ModItems.AMETHYST_PICKAXE), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_SHOVEL), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.TOOLS, Items.NETHERITE_SHOVEL).criterion(hasItem(ModItems.AMETHYST_SHOVEL), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_SWORD), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.COMBAT, Items.NETHERITE_SWORD).criterion(hasItem(ModItems.AMETHYST_SWORD), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_HELMET), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.COMBAT, Items.NETHERITE_HELMET).criterion(hasItem(ModItems.AMETHYST_HELMET), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_CHESTPLATE), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.COMBAT, Items.NETHERITE_CHESTPLATE).criterion(hasItem(ModItems.AMETHYST_CHESTPLATE), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_LEGGINGS), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.COMBAT, Items.NETHERITE_LEGGINGS).criterion(hasItem(ModItems.AMETHYST_LEGGINGS), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE), Ingredient.ofItems(ModItems.AMETHYST_BOOTS), Ingredient.ofItems(Items.NETHERITE_INGOT), RecipeCategory.COMBAT, Items.NETHERITE_BOOTS).criterion(hasItem(ModItems.AMETHYST_BOOTS), conditionsFromItem(Items.NETHERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "amethyst_boots_upgrade"));

        //Upgrade Netherite Tools to Enderite Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_AXE), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.TOOLS, ModItems.ENDERITE_AXE).criterion(hasItem(Items.NETHERITE_AXE), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_HOE), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.TOOLS, ModItems.ENDERITE_HOE).criterion(hasItem(Items.NETHERITE_HOE), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_PICKAXE), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.TOOLS, ModItems.ENDERITE_PICKAXE).criterion(hasItem(Items.NETHERITE_PICKAXE), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_SHOVEL), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.TOOLS, ModItems.ENDERITE_SHOVEL).criterion(hasItem(Items.NETHERITE_SHOVEL), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_SWORD), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.COMBAT, ModItems.ENDERITE_SWORD).criterion(hasItem(Items.NETHERITE_SWORD), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_HELMET), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.COMBAT, ModItems.ENDERITE_HELMET).criterion(hasItem(Items.NETHERITE_HELMET), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_CHESTPLATE), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.COMBAT, ModItems.ENDERITE_CHESTPLATE).criterion(hasItem(Items.NETHERITE_CHESTPLATE), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_LEGGINGS), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.COMBAT, ModItems.ENDERITE_LEGGINGS).criterion(hasItem(Items.NETHERITE_LEGGINGS), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.ENDERITE_UPGRADE), Ingredient.ofItems(Items.NETHERITE_BOOTS), Ingredient.ofItems(ModItems.ENDERITE_INGOT), RecipeCategory.COMBAT, ModItems.ENDERITE_BOOTS).criterion(hasItem(Items.NETHERITE_BOOTS), conditionsFromItem(ModItems.ENDERITE_INGOT)).offerTo(exporter, Identifier.of("ascendedalloys", "netherite_boots_upgrade"));

        //Upgrade Gold Tools to Diamond Tools
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_AXE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_AXE).criterion(hasItem(Items.GOLDEN_AXE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_axe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_HOE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_HOE).criterion(hasItem(Items.GOLDEN_HOE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_hoe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_PICKAXE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_PICKAXE).criterion(hasItem(Items.GOLDEN_PICKAXE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_pickaxe_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_SHOVEL), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.TOOLS, Items.DIAMOND_SHOVEL).criterion(hasItem(Items.GOLDEN_SHOVEL), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_shovel_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_SWORD), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_SWORD).criterion(hasItem(Items.GOLDEN_SWORD), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_sword_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_HELMET), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_HELMET).criterion(hasItem(Items.GOLDEN_HELMET), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_helmet_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_CHESTPLATE), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_CHESTPLATE).criterion(hasItem(Items.GOLDEN_CHESTPLATE), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_chestplate_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_LEGGINGS), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_LEGGINGS).criterion(hasItem(Items.GOLDEN_LEGGINGS), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_leggings_upgrade"));
        SmithingTransformRecipeJsonBuilder.create(Ingredient.ofItems(ModItems.DIAMOND_UPGRADE), Ingredient.ofItems(Items.GOLDEN_BOOTS), Ingredient.ofItems(Items.DIAMOND), RecipeCategory.COMBAT, Items.DIAMOND_BOOTS).criterion(hasItem(Items.GOLDEN_BOOTS), conditionsFromItem(Items.DIAMOND)).offerTo(exporter, Identifier.of("ascendedalloys", "gold_boots_upgrade"));

    }
}
